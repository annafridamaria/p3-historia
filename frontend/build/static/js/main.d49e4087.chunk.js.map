{"version":3,"sources":["images/marieantoinette.png","images/HeaderSVG.js","components/Styled.js","components/Header.js","components/Episode.js","components/BrowseEpisodes.js","components/LoginForm.js","components/RegisterForm.js","components/UserPage.js","components/Library/Checkbox.js","components/EpisodeForm.js","components/PlaylistForm.js","components/ReviewForm.js","index.js","App.js"],"names":["module","exports","HeaderSVG","xmlns","width","height","viewBox","d","Wrapper","styled","div","props","flexdirection","overflow","WrapperRow","EpisodeBox","ListBox","Episode2","Header1","h1","Text","p","fontsize","Article","article","webkitlineclamp","Button","button","minwidth","Form","form","Label","label","Input","input","CheckboxInput","CheckBoxSquare","TextArea","textarea","Select","select","EpisodeImage","img","ImageRound","Header","history","useHistory","useLocation","handleButtonClick","tagName","search","searchParams","URLSearchParams","location","getAll","includes","toString","replace","append","push","className","src","MarieA","alt","type","title","onClick","Episode","description","image","century","tags","map","index","tag","BrowseEpisodes","useState","episodes","setEpisodes","useEffect","a","fetch","episodesJson","json","episode","filter","filteredEpisodes","has","some","upsateEpisodesList","key","_id","LoginForm","email","setEmail","password","setPassword","authenticated","setAuthenticated","required","defaultValue","onChange","event","target","value","toLowerCase","preventDefault","console","log","method","body","JSON","stringify","headers","then","res","ok","Error","accessToken","window","localStorage","setItem","RegisterForm","name","setName","registered","setRegistered","handleSubmit","status","message","onSubmit","UserPage","setPlaylist","fetchUrl","id","Checkbox","checked","EpisodeForm","registred","setTitle","released","setReleased","setCentury","setDescription","region","setRegion","country","setCountry","sources","setSources","expert","setExpert","setImage","weblink","setWeblink","applink","setApplink","podcastlink","setPodcastlink","setKultur","setMonarki","setPolitik","setReligion","setVetenskap","listOfTags","setListOfTags","handleCheckbox","option","centuryArray","split","year","trim","parseInt","PlaylistForm","created","ReviewForm","episodeId","setEpisodeId","text","setText","ReactDOM","render","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.d49e4087.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marieantoinette.be66d412.png\";","import React from 'react'\n\nexport const HeaderSVG = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2560\" height=\"733.375\" viewBox=\"0 0 2560 733.375\">\n  <path d=\"M-6-5S-292.56,705.151-9,732,1480.2,383.96,2563,479c155.23-17.694,8-484,8-484H-6Z\"/>\n  {/* <path id=\"Color_Fill_1\" data-name=\"Color Fill 1\" class=\"cls-1\" d=\"M-6-5S-292.56,705.151-9,732,1480.2,383.96,2563,479c155.23-17.694,8-484,8-484H-6Z\" color=\"#f48ebd\"/> */}\n</svg>\n)","import styled from 'styled-components'\n\n// Wrappers & divs\n\nexport const Wrapper = styled.div`\n  width: ${props => props.width ? props.width : \"auto\"};\n  height: ${props => props.height ? props.height : \"auto\"};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: ${props => props.flexdirection ? props.flexdirection : \"column\"};\n  overflow: ${props => props.overflow ? props.overflow : \"none\"};\n\n`\nexport const WrapperRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n  height: ${props => props.height ? props.height : \"auto\"};\n  width: ${props => props.width ? props.width : \"auto\"};\n`\nexport const EpisodeBox = styled.div`\n    width: ${props => props.width ? props.width : \"18%\"};\n    height: ${props => props.height ? props.height : \"30%\"};\n    border-radius: 15px;\n    padding: 10px;\n    margin: 10px;\n    -webkit-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    -moz-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n&:hover {\n    transform: scale(1.02);\n    transition: all 0.4s ease;\n    -webkit-box-shadow: 8px 11px 31px -9px rgba(0,0,0,0.4);\n    -moz-box-shadow: 8px 11px 31px -9px rgba(0,0,0,0.4);\n    box-shadow: 8px 11px 31px -9px rgba(0,0,0,0.4);\n}`\n\nexport const ListBox = styled.div`\n    width: ${props => props.width ? props.width : \"18%\"};\n    height: ${props => props.width ? props.width : \"30%\"};\n    border-radius: 15px;\n    padding: 10px;\n    margin: 10px;\n    border: solid 1px #f48ebd;\n    /* -webkit-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    -moz-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4); */\n&:hover {\n    border: solid  1px #fff59c;\n    color: #fff59c;\n    background: #f48ebd;\n    transition: all 0.4s ease;\n}`\n\nexport const Episode2 = styled.div`\n    width: 40%;\n    height: 30%;\n    border-radius: 15px;\n    padding: 10px;\n    margin: 10px;\n    -webkit-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    -moz-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n`\nexport const EpisodeSmall = styled.div`\n    width: 90%;\n    height: 30px;\n    border-radius: 15px;\n    padding: 10px;\n    margin: 10px;\n    -webkit-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    -moz-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n    box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n&:hover {\n    font-weight: bold;\n    /* transform: scale(1.01);\n    transition: all 0.2s ease;\n    -webkit-box-shadow: 8px 11px 31px -9px rgba(0,0,0,0.4);\n    -moz-box-shadow: 8px 11px 31px -9px rgba(0,0,0,0.4);\n    box-shadow: 8px 11px 31px -9px rgba(0,0,0,0.4); */\n}`\n\n// Text & headers\nexport const Header1 = styled.h1`\n    font-size: 18px;\n`\nexport const Text = styled.p`\n  font-size: ${props => props.fontsize ? props.fontsize : \"15px\"};\n  /* overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis; */\n`\nexport const Article = styled.article`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: ${props => props.webkitlineclamp ? props.webkitlineclamp : 12};\n    /* -webkit-line-clamp: 6; */\n    -webkit-box-orient: vertical;\n`\n// User interaction \n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: ${props => props.minwidth ? props.minwidth : \"70px;\"};\n  height: 30px;\n  border-radius: 15px;\n  padding: 0px 5px;\n  margin: 10px;\n  background: #f48ebd;\n  color: #fff59c;\n  border: none;\n    &:hover {\n      transition: ease 0.4s;\n      transform: scale(1.1);\n      font-weight: bold;\n  }\n`\n// Form & input\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: ${props => props.width ? props.width : \"20%\"};\n  border-radius: 15px;\n  padding: 10px;\n  margin: 10px;\n  -webkit-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n  -moz-box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n  box-shadow: 8px 11px 12px -9px rgba(0,0,0,0.4);\n`\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nexport const Input = styled.input` \n  height: 30px;\n  width: ${props => props.width ? props.width : \"auto\"};\n  background: none;\n  border: none;\n  border-bottom: 2px solid #f48ebd;\n  font-size: large;\n  color: #f48ebd;\n`\nexport const CheckboxInput = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 70px;\n  height: 30px;\n  border-radius: 15px;\n  padding: 0px 5px;\n  margin: 10px;\n  background: #f48ebd;\n  color: #fff59c;\n  border: none;\n    &:checked {\n    color: #f48ebd;\n    background: #fff59c;\n    font-weight: bold;\n  }\n`\nexport const CheckBoxSquare = styled.input`\n    /* display: none; */\n`\nexport const TextArea = styled.textarea`\n  height: ${props => props.height ? props.height : \"100px\"};\n  width: ${props => props.width ? props.width : \"auto\"};\n  resize: none; \n  background: none;\n  border-radius: 10px;\n  border: 2px solid #f48ebd;\n  margin-top: 10px;\n  font-size: large;\n  color: #f48ebd;\n`\nexport const Select = styled.select`\n  /* display: flex;\n  align-items: center;\n  justify-content: center; */\n  width: auto;\n  height: 30px;\n  border-radius: 15px;\n  padding: 0px 5px;\n  margin: 10px;\n  background: #f48ebd;\n  color: #fff59c;\n  border: none;\n  font-size: 15px;\n`\n// Images\nexport const EpisodeImage = styled.img`\n    height: 180px;\n    width: 100%;\n    object-fit: cover;\n    object-position: 50%;\n`\nexport const ImageRound = styled.img`\n  height: 100px;\n  width: 100px;\n  object-fit: cover;\n  border-radius:50%\n`;","import React, {useState} from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n// import { fetchProduct } from 'reducers/products'\nimport '../components/header.css'\n\n// COMPONENTS\nimport {HeaderSVG} from '../images/HeaderSVG.js'\nimport {Button} from '../components/Styled'\n\nimport MarieA from '../images/marieantoinette.png'\n\nexport const Header = () => {\n    const history = useHistory();\n    const location = useLocation();\n    \n    function handleButtonClick(tagName) {\n      const searchParams = new URLSearchParams(history.location.search);\n      const aldreadyHasTagOnUrl = searchParams.getAll(\"tags\").includes(tagName);\n  \n      // Removes the query parameter makin button works like a checkbox\n      let search;\n      if (aldreadyHasTagOnUrl) {\n        search = searchParams.toString().replace(`tags=${tagName}`, \"\");\n      } else {\n        searchParams.append(\"tags\", tagName);\n        search = searchParams.toString();\n      }\n  \n      history.push({ search });\n    }\n\n  return (\n      <div className=\"header\">\n        <div className=\"headerObjects\">\n          <img src={MarieA} alt=\"Marie Antoinette\"/>\n          <h1>P3 Historia</h1>\n          \n        </div>\n        <HeaderSVG/>\n        {/* {location.login && ( */}\n          <Button\n            type=\"button\"\n            title=\"Login\"\n            onClick={() => {\n              history.push('/login')\n         }}>Login</Button>\n        {/* )} */}\n\n           \n        <div className=\"filters\">\n          <Button\n            type=\"button\"\n            title=\"Politik\"\n            onClick={() => handleButtonClick(\"Politik\")}>Politik</Button>\n          <Button\n            type=\"button\"\n            title=\"Monarki\"\n            onClick={() => handleButtonClick(\"Monarki\")}>Monarki</Button>\n            <Button\n            type=\"button\"\n            title=\"Religion\"\n            onClick={() => handleButtonClick(\"Religion\")}>Religion</Button>\n            <Button\n            type=\"button\"\n            title=\"Vetenskap\"\n            onClick={() => handleButtonClick(\"Vetenskap\")}>Vetenskap</Button>\n         <Button\n         type=\"button\"\n         title=\"Kultur\"\n         onClick={() => handleButtonClick(\"Kultur\")}>Kultur</Button>\n        </div>\n      </div>\n    )\n  }\n","import React from 'react'\nimport { EpisodeBox, EpisodeImage, Header1, Article, WrapperRow, Button } from \"./Styled\";\n\nexport const Episode = ({title, description, image, century, tags }) => {\n\n    // const selectEpisode = () => { \n    //     // var element = document.getElementsByClassName=\"episode\";\n    //     // element.classList.add(\"selected\");\n    //     // var episode = document.getElementsByClassName(\"episode\"); \n    //     var episode = document.getElementById('episode');\n    //         episode.classList.add('selected');\n    //   }\n\n    return (\n        <EpisodeBox>\n            {image && <EpisodeImage src={image} alt={title}/>}\n            {title && <Header1>{title}</Header1>}\n            <p>{century && century.map((century, index) => {\n                return (<>\n                {index === 1 ? \" - \" : null}\n                {century}\n                </>)\n            })}\n            </p>\n            {description && \n            <Article\n            webkitlineclamp={\"6\"}>\n                {description}\n            </Article>}\n            <WrapperRow>{tags && tags.map((tag) => (\n            <Button>{tag}</Button>))}</WrapperRow>\n        </EpisodeBox>\n    )\n   \n}","import React, {useEffect, useState} from 'react'\nimport { useLocation } from 'react-router-dom'\nimport queryString from \"query-string\"\nimport 'app.css'\n// COMPONENTS\nimport {Episode} from '../components/Episode'\n\nexport const BrowseEpisodes = () => {\n  const [episodes, setEpisodes] = useState([])\n  // const url = \"http://localhost:8080/episodes\"\n  const location = useLocation\n\n  useEffect(() => {\n    async function upsateEpisodesList() {\n      const searchParams = new URLSearchParams(location.search);\n      const episodesJson = await fetch(\"https://p3historia.herokuapp.com/episodes\");\n      // There are some episodes that doesnt have tags attribute.\n      // In order to make things easier here I gonna filter them\n      // but it would be better represent episodes without tags\n      // giving an empty array as tags' attribute value { tags: [] }\n      // on backend\n      const episodes = (await episodesJson.json()).filter(\n        episode => !!episode.tags\n      );\n\n      let filteredEpisodes = episodes;\n      if (searchParams.has(\"tags\")) {\n        // should be filter by tags\n        filteredEpisodes = episodes.filter(episode => {\n          // get episodes that has tags combination described on 'searchParams'\n          let matchAll = !searchParams\n            .getAll(\"tags\")\n            .some(tag => !episode.tags.includes(tag));\n\n          return matchAll;\n        });\n      }\n\n      setEpisodes(filteredEpisodes);\n    }\n\n    upsateEpisodesList();\n  }, [location.search]);\n\n  // useEffect(() => {\n  //   async function fetchEpisodes() {\n  //     const { tags } = queryString.parse(location.search);\n  //     console.log(tags)\n  //     const episodesJson = await fetch(\"http://localhost:8080/episodes\");\n  //     const episodes = await episodesJson.json();\n\n  //     let filteredEpisodes = episodes;\n  //     if (tags) {\n  //       // should be filter by tags\n  //       filteredEpisodes = episodes.filter(\n  //         episode =>\n  //           !!episode.tags && episode.tags.some(tag => tags.includes(tag))\n  //       );\n  //     }\n\n  //     setEpisodes(filteredEpisodes);\n  //   }\n\n  //   fetchEpisodes();\n  // }, [location.search]);\n\n  return (\n      <div className=\"episodes\">\n      {episodes.map((episode) => (\n          <Episode\n          key={episode._id}\n          image={episode.image}\n          century={episode.century}\n          title={episode.title}\n          description={episode.description}\n          tags={episode.tags}/>\n      ))}\n      </div>\n    )\n  }\n","import React, {useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Wrapper, Form, Label, Input, Button } from './Styled'\n\nexport const LoginForm = () => {\n    const url = \"https://p3historia.herokuapp.com/login\"\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [authenticated, setAuthenticated] = useState(false)\n\n    const handleLogin = event => {\n        event.preventDefault()\n        console.log(email, password)\n        fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify({ email : email, password : password }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then (res => {\n            console.log(res)\n            if (!res.ok) {\n                throw new Error(\"Your email and / or password was incorrect\")\n            } else {\n                setAuthenticated(true)\n                return res.json();\n            }\n        })\n        .then (({accessToken}) => {\n            if (accessToken) {\n                window.localStorage.setItem(\"accessToken\", accessToken)\n                setAuthenticated(true)\n                history.push('/user')\n            }\n        })\n    }\n\n\n    return (\n        <Wrapper>\n            <Form\n            width={\"30%\"}\n            >\n                {authenticated && (\n                    <h1>Logged in!</h1>\n                )}\n                <Label>\n                    <Input \n                    required\n                    type=\"text\" \n                    // onfocus=\"this.value=''\" \n                    defaultValue=\"Email\"\n                    onChange={event => setEmail(event.target.value.toLowerCase())}\n                    ></Input>\n                </Label>\n                <Label>\n                    <Input \n                    required\n                    type=\"Password\"\n                    defaultValue=\"Password\"\n                    onChange={event => setPassword(event.target.value)}\n                    ></Input>\n                </Label>\n                <Button \n                onClick={handleLogin}\n                >Login</Button>\n                <Button\n                    type=\"button\"\n                    title=\"Register\"\n                    onClick={() => {\n                    history.push('/register')}}\n                    >Register new user</Button>\n            </Form>\n        </Wrapper>\n    )\n}","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport { Wrapper, Form, Input, Button } from './Styled'\n\nexport const RegisterForm = () => {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [registered, setRegistered] = useState(false)\n\n    const url = \"https://p3historia.herokuapp.com/users\";\n    const history = useHistory()\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        fetch (url, {\n            method: \"POST\",\n            body: JSON.stringify({ name, email, password }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => {\n            if (res.status !== 201) {\n                return(\n                    res.json().then(json => console.log(json.message))\n                )\n            } else {\n                setRegistered(true)\n            }\n        })\n    }\n    return (\n       <Wrapper>\n           \n            <Form\n            width={\"30%\"}\n            onSubmit={handleSubmit}>\n                {registered && (\n               <h1>Registred!</h1>\n           )}\n            <label>\n                <Input \n                required\n                type=\"text\"\n                defaultValue=\"Name\"\n                onChange={event => setName(event.target.value)}\n                ></Input>\n            </label>\n            <label>\n                <Input \n                required\n                type=\"text\"\n                defaultValue=\"Email\"\n                onChange={event => setEmail(event.target.value.toLowerCase())}\n                ></Input>\n            </label>\n            <label>\n                <Input \n                required\n                type=\"Password\"\n                defaultValue=\"Password\"\n                onChange={event => setPassword(event.target.value)}\n                // value={password}\n                ></Input>\n            </label>\n            <Button \n            type=\"submit\"\n            onClick={handleSubmit}>Register</Button>\n            <Button\n                type=\"button\"\n                title=\"Login\"\n                onClick={() => {\n                history.push('/login')\n            }}\n                >Already a user?</Button>\n        </Form>\n       </Wrapper>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {WrapperRow, Wrapper, Form, ListBox, Text, Button, Header1, ImageRound, Episode2, Article} from 'components/Styled'\n\nexport const UserPage = () => {\n    const [playlist, setPlaylist] = useState([])\n    const [episodes, setEpisodes] = useState([])\n    const history = useHistory()\n    const fetchUrl = \"https://p3historia.herokuapp.com/episodes\";\n\n    useEffect (() => {\n        fetch(fetchUrl)\n        .then(res => res.json())\n        .then(json => setEpisodes(json))\n      }, [fetchUrl])\n      const addToPlaylist = () => {\n          return\n      }\n    return (\n        <>\n            <Wrapper>\n                <ImageRound src=\"https://miro.medium.com/fit/c/256/256/2*tVPotzlGdl-5oM4WI2Z4Ug.jpeg\" alt=\"Frida\"/>\n                <Header1>Frida</Header1>\n            </Wrapper>\n            <WrapperRow>\n                <Button\n                    type=\"button\"\n                    title=\"Browse episodes\"\n                    onClick={() => {\n                    history.push('/')\n                }}\n                    >Browse episodes</Button>\n                <Button\n                    type=\"button\"\n                    title=\"Review episodes\"\n                    onClick={() => {\n                    history.push('/add-review')\n                }}\n                    >Review episodes</Button>\n                <Button\n                    type=\"button\"\n                    title=\"Add episodes\"\n                    onClick={() => {\n                    history.push('/add-episode')\n                }}\n                    >Add episode</Button>\n            </WrapperRow>\n            <WrapperRow>\n            <Wrapper\n                width={\"44%\"}>\n                <Form\n                width={\"90%\"}>\n                    <p>Playlists</p>\n                    <Wrapper\n                        height ={\"300px\"}\n                        width={\"90%\"}\n                        overflow={\"scroll\"}>\n                        {episodes.map((episode) => (\n                            <>\n                                <ListBox\n                                    key={episode._id}\n                                    title={episode.title}\n                                    value={episode._id}\n                                    onChange={event => setPlaylist(event.target.value)}\n                                    height={\"20px\"}\n                                    width={\"auto\"}>\n                                        <WrapperRow\n                                            width={\"400px\"}\n                                            height={\"40px\"}\n                                        >\n                                            <Text fontsize={\"12px\"}>{episode.title}</Text>\n                                            <Button\n                                                minwidth={\"30px\"}\n                                                onClick={addToPlaylist(episode.id)}>\n                                                    <b>+</b>\n                                            </Button>\n                                        </WrapperRow>\n                                </ListBox>\n                            </>\n                        ))}\n                    </Wrapper>\n                </Form>\n            </Wrapper>\n                <Episode2>\n                    <Header1>Reviews</Header1>\n                    <Article>\n                        <p><b>Karin Månsdotter – pigan som blev drottning av Sverige</b></p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod \n                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                         quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n                         consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n                         cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat \n                         non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                         Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod \n                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                         quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n                         consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n                         cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat \n                         non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                         Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod \n                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                         quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n                         consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n                         cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat \n                         non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                    </Article>\n                </Episode2>\n            </WrapperRow>\n        </>\n    ) \n}","import React from 'react'\nimport {CheckboxInput, CheckBoxSquare} from 'components/Styled'\n\nexport const Checkbox = ({ value, label, checked, onChange }) => {\n    return (\n            <CheckboxInput>\n            <CheckBoxSquare\n            type=\"checkbox\"\n            value={value}\n            checked={checked}\n            onChange={onChange}\n            />\n            <p>{label}</p>\n        </CheckboxInput>\n    )    \n}","import React, { useState }from 'react'\nimport { Wrapper, WrapperRow, Form, Label, Input, TextArea, Button } from './Styled'\nimport { Checkbox } from './Library/Checkbox'\n\nexport const EpisodeForm = () => {\n    const [registred, setRegistered] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const [released, setReleased] = useState(\"\")\n    const [century, setCentury] = useState([])\n    const [description, setDescription] = useState(\"\")\n    const [region, setRegion] = useState(\"\")\n    const [country, setCountry] = useState(\"\")\n    const [sources, setSources] = useState(\"\")\n    const [expert, setExpert] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [weblink, setWeblink] = useState(\"\")\n    const [applink, setApplink] = useState(\"\")\n    const [podcastlink, setPodcastlink] = useState(\"\")\n    const [kultur, setKultur] = useState(false)\n    const [monarki, setMonarki] = useState(false)\n    const [politik, setPolitik] = useState(false)\n    const [religion, setReligion] = useState(false)\n    const [vetenskap, setVetenskap] = useState(false)\n    const [tags, setTags] = useState([])\n    const [listOfTags, setListOfTags] = useState([])\n\n\n    const url = \"https://p3historia.herokuapp.com/episode\";\n\n    const splitCentury = (value) => {\n        var split = value.split(\",\").map(year => {\n            const trim = year.trim()\n            return parseInt(trim)      \n            }\n        )\n        return split\n    }\n\n    const pushTags = event => {\n        if (event.target.checked) {\n          setTags([...tags, event.target.name]);\n        } else {\n          let cleandedTags = tags.filter(tag => tag !== event.target.name);\n          setTags(cleandedTags);\n        }\n      };\n\n      const handleCheckbox = event => {\n        if (listOfTags.includes(event.target.value)) {\n            setListOfTags(\n                listOfTags.filter(option => option !== event.target.value)\n            );\n        } else {\n            setListOfTags([...listOfTags, event.target.value]);\n        }\n    };\n\n    const handleSubmit = event => {\n\n        event.preventDefault()\n        const centuryArray = (splitCentury(century))\n        fetch (url, {\n            method: \"POST\",\n            body: JSON.stringify({ title, released, century: centuryArray, description, region, country, sources, expert, tags: listOfTags, image, weblink, applink, podcastlink }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => {\n            console.log(res)\n            if (res.status !== 201) {\n                return(\n                    res.json().then(json => console.log(json.message))\n                )\n            } else {\n                setRegistered(true)\n            }\n        })\n    }\n    return (\n        <Wrapper>\n            {registred && (\n                <h1>Episode added!</h1>\n            )}\n            <Form\n            width={\"50%\"}\n            >\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Title\"\n                    onChange={event => setTitle(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Release date\"\n                    onChange={event => setReleased(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Century\"\n                    // value={this.state.value} \n                    // onChange={set(this.value)}\n                    onChange={event => setCentury(event.target.value)}\n                    // onChange={splitCentury(value)}\n                    />\n                </Label>\n                <Label>\n                    <TextArea\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Description\"\n                    onChange={event => setDescription(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Region\"\n                    onChange={event => setRegion(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Country\"\n                    onChange={event => setCountry(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Sources\"\n                    onChange={event => setSources(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Expert\"\n                    onChange={event => setExpert(event.target.value)}\n                    />\n                </Label>\n                <p>Tags</p>\n                <WrapperRow\n                width={\"60%\"}>\n                    <Checkbox \n                        label=\"Monarki\"\n                        value=\"Monarki\"\n                        checked={listOfTags.includes(\"Monarki\")}\n                        onChange={event => {\n                          setMonarki(event.target.checked);\n                          handleCheckbox(event);\n                        }}/>\n                    <Checkbox \n                        label=\"Politik\"\n                        value=\"Politik\"\n                        checked={listOfTags.includes(\"Politik\")}\n                        onChange={event => {\n                          setPolitik(event.target.checked);\n                          handleCheckbox(event);\n                        }}/>\n                    <Checkbox \n                        label=\"Religion\"\n                        value=\"Religion\"\n                        checked={listOfTags.includes(\"Religion\")}\n                        onChange={event => {\n                          setReligion(event.target.checked);\n                          handleCheckbox(event);\n                        }}/>\n                    <Checkbox \n                        label=\"Vetenskap\"\n                        value=\"Vetenskap\"\n                        checked={listOfTags.includes(\"Vetenskap\")}\n                        onChange={event => {\n                          setVetenskap(event.target.checked);\n                          handleCheckbox(event);\n                        }}/>\n                    <Checkbox \n                        label=\"Kultur\"\n                        value=\"Kultur\"\n                        checked={listOfTags.includes(\"Kultur\")}\n                        onChange={event => {\n                          setKultur(event.target.checked);\n                          handleCheckbox(event);\n                        }}/>\n                </WrapperRow>\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Image url\"\n                    onChange={event => setImage(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"SR weblink\"\n                    onChange={event => setWeblink(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"SR app link\"\n                    onChange={event => setApplink(event.target.value)}\n                    />\n                </Label>\n                <Label>\n                    <Input\n                    required\n                    width={\"60%\"}\n                    type=\"text\"\n                    defaultValue=\"Apple podcast link\"\n                    onChange={event => setPodcastlink(event.target.value)}\n                    />\n                </Label>\n                <Button \n                    type=\"submit\"\n                    onClick={handleSubmit}>Add episode</Button>\n            </Form>\n            \n        </Wrapper>\n\n    )\n}","import React, { useState, useEffect }from 'react'\nimport { Wrapper, WrapperRow, Text, Form, Input, ListBox, Button } from './Styled'\n\nexport const PlaylistForm = () => {\n    const [title, setTitle] = useState(\"\")\n    const [user, setUser] = useState(\"\")\n    const [playlist, setPlaylist] = useState([])\n    const [created, setCreated] = useState(false)\n    const url = \"https://p3historia.herokuapp.com/users\";\n\n    const fetchUrl =\"https://p3historia.herokuapp.com/episodes\"\n    const [episodes, setEpisodes] = useState([])\n    // const [url, setUrl] = useState(\"\")\n\n  useEffect (() => {\n    fetch(fetchUrl)\n    .then(res => res.json())\n    .then(json => setEpisodes(json))\n  }, [fetchUrl])\n\n  const addToPlaylist = (id) => {\n      console.log(id)\n      const setUser = \"Current user\"\n    //   setPlaylist([...playlist, {\n    //       id: playlist.length,\n    //       value: id\n    //   }])\n    // setPlaylist( playlist => {\n    //     playlist.push({\n    //         id: playlist.length,\n    //         value: Math.floor(Math.random() * 10) + 1\n    //     })\n\n    //     return playlist\n    // })\n}\n    const handleSubmit = event => {\n        event.preventDefault()\n        fetch (url, {\n            method: \"POST\",\n            body: JSON.stringify({ title, user, episodes }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => {\n            if (res.status !== 201) {\n                return(\n                    res.json().then(json => console.log(json.messae))\n                )\n            } else {\n                setCreated(true)\n            }\n        })\n    }\n    return (\n        <WrapperRow>\n            <Wrapper\n                width={\"44%\"}>\n                {created && (\n                    <h1>Playlist added!</h1>)}\n                <Form\n                width={\"90%\"}>\n                    <p>Add episodes</p>\n                    <Wrapper\n                        height ={\"300px\"}\n                        width={\"90%\"}\n                        overflow={\"scroll\"}>\n                        {episodes.map((episode) => (\n                            <>\n                                <ListBox\n                                    key={episode._id}\n                                    title={episode.title}\n                                    value={episode._id}\n                                    onChange={event => setPlaylist(event.target.value)}\n                                    height={\"20px\"}\n                                    width={\"auto\"}>\n                                        <WrapperRow\n                                            width={\"400px\"}\n                                            height={\"40px\"}\n                                        >\n                                            <Text fontsize={\"12px\"}>{episode.title}</Text>\n                                            <Button\n                                                minwidth={\"30px\"}\n                                                onClick={addToPlaylist(episode.id)}>\n                                                    <b>+</b>\n                                            </Button>\n                                        </WrapperRow>\n                                </ListBox>\n                            </>\n                        ))}\n                    </Wrapper>\n                </Form>\n            </Wrapper>\n            <Wrapper\n                width={\"44%\"}>\n                {created && (\n                    <h1>Playlist added!</h1>\n                )}\n                <Form\n                width={\"90%\"}>\n                    <label>\n                        <Input\n                        required\n                        type=\"text\"\n                        defaultValue=\"Name your playlist\"\n                        onChange={event => setTitle(event.target.value)}\n                        />\n                    </label>\n                    <Wrapper\n                        height ={\"300px\"}\n                        width={\"90%\"}\n                        overflow={\"scroll\"}>\n                        {episodes.map((episode) => (\n                            <>\n                                <ListBox\n                                    key={episode._id}\n                                    title={episode.title}\n                                    value={episode._id}\n                                    onChange={event => setPlaylist(event.target.value)}\n                                    height={\"20px\"}\n                                    width={\"auto\"}>\n                                        <WrapperRow>\n                                            {episode.title}\n                                        </WrapperRow>\n                                </ListBox>\n                            </>\n                        ))}\n                    </Wrapper>\n                    <Button\n                        type=\"submit\">Create playlist</Button>\n                </Form>\n            </Wrapper>\n\n        </WrapperRow>\n            \n\n    )\n}","import React, { useState, useEffect }from 'react'\nimport { Wrapper, WrapperRow, Form, Label, Input, Select, TextArea, Button } from './Styled'\nimport { Checkbox } from './Library/Checkbox'\n\nexport const ReviewForm = () => {\n    const [episodeId, setEpisodeId] = useState(0)\n    const [text, setText] = useState(\"\")\n    const [user, setUser] = useState(\"\")\n    // const [user, setUser] = useState(`${currentUser._id}`)\n    const [registred, setRegistered] = useState(false)\n    const [episodes, setEpisodes] = useState([])\n\n    const url = \"https://p3historia.herokuapp.com/reviews\";\n    const fetchUrl = \"https://p3historia.herokuapp.com/episodes\";\n\n    useEffect (() => {\n        fetch(fetchUrl)\n        .then(res => res.json())\n        .then(json => setEpisodes(json))\n      }, [fetchUrl])\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        console.log(episodeId, text)\n        fetch (url, {\n            method: \"POST\",\n            body: JSON.stringify({ episode: episodeId, text }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => {\n            console.log(res)\n            if (res.status !== 201) {\n                return(\n                    res.json().then(json => console.log(json.message))\n                )\n            } else {\n                setRegistered(true)\n            }\n        })\n    }\n    return (\n        <Wrapper>\n            {registred && (\n                <h1>Review posted!</h1>\n            )}\n            <Form\n            width={\"50%\"}\n            >\n                <Label>\n                <Select\n                onChange={event => setEpisodeId(event.target.value)}\n                >\n                {episodes.map((episode) => (\n                    <option\n                    key={episode._id}\n                    value={episode._id}\n                    >{episode.title}</option>\n                    ))}\n                </Select>\n                </Label>\n                <Label>\n                    <TextArea\n                    required\n                    width={\"75%\"}\n                    height={\"150px\"}\n                    type=\"text\"\n                    defaultValue=\"Review\"\n                    onChange={event => setText(event.target.value)}\n                    />\n                </Label>\n                <Button \n                    type=\"submit\"\n                    onClick={handleSubmit}>Post review</Button>\n            </Form>\n            \n        </Wrapper>\n\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport 'app.css'\n// COMPONENTS\nimport {Header} from './components/Header.js'\nimport {BrowseEpisodes} from './components/BrowseEpisodes'\nimport {LoginForm} from './components/LoginForm'\nimport {RegisterForm} from './components/RegisterForm'\nimport {UserPage} from './components/UserPage'\nimport {EpisodeForm} from './components/EpisodeForm'\nimport {PlaylistForm} from './components/PlaylistForm'\nimport {ReviewForm} from './components/ReviewForm'\nimport {Footer} from './components/Footer.js'\n\nexport const App = () => {\n  return (\n      <BrowserRouter>\n      <Header />\n        <Switch>\n          <Route path=\"/\" exact>\n            <BrowseEpisodes />\n          </Route>\n          <Route path=\"/login\" exact>\n            <LoginForm />\n          </Route>\n          <Route path=\"/register\" exact>\n            <RegisterForm />\n          </Route>\n          <Route path=\"/user\" exact>\n            <UserPage />\n          </Route>\n          <Route path=\"/add-episode\" exact>\n            <EpisodeForm />\n          </Route>\n          <Route path=\"/add-playlist\" exact>\n            <PlaylistForm />\n          </Route>\n          <Route path=\"/add-review\" exact>\n            <ReviewForm />\n          </Route>\n        </Switch>\n        {/* <Footer /> */}\n      </BrowserRouter>\n    )\n  }\n"],"sourceRoot":""}